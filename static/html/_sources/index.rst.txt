.. Alex's Python Course documentation master file, created by
   sphinx-quickstart on Sun May 30 22:13:31 2021.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.
   Notes:  Start with Building Documentation with Sphinx
   (1) Start virtual environment
   (2)  $ make html

   Some notes for me:
   * Following Mariatta's excellent tutorial:
   https://sphinx-intro-tutorial.readthedocs.io/en/latest/index.html  
   

   *Taking notes in OneNote Programming/Sphinx Tutorial

   *Currently here:  https://sphinx-intro-tutorial.readthedocs.io/en/latest/sphinx_first_steps.html#adding-more-pages

   * Extension for autobuilding, copying, and themes can be found here:
   For now I will only add the autobuilding extension as it speeds up the build processs.

Alex's Python Course!
================================================

.. toctree::
   :maxdepth: 2
   :caption: Contents

   Introduction
   changelog

Installing Python
-----------------
* Python.org
* Anaconda.org
* Pycharm
* Visual Studio Code

Editors
-------
* Sublime Text
* Notepad
* Pycharm
* Visual Studio Code
* Idle (comes with Python)
* Spyder (comes with Anaconda distribution)

Simple Mathematical Computations
--------------------------------
* mathematical operations: addtion, subtraction, multiplication, division, exponentiation
* floor division
* modulus


Basic Data Structures
---------------------
* Computation with basic data stuctures
* type()
* common methods
* slicing

Exercises
---------
* math
* complex number
* string
* list
* set
* tuple
* boolean
* dictionary
* slicing


Logical Operators
-----------------
* not
* and
* or

Conditional Statements
----------------------
* if
* if/else
* if/elif


Loops
-----
* while
* range
* for

Comprehension
-------------
* defining a comprehension
* conditional statements and comprehension
* dictionary comprehension

Functions
---------
* defining a function
* examples
* doc strings
* Why?

Generators
----------
* defining a generator
* examples
* Why?

Classes
-------
* defining a class
* class attributes
* class methods
* Why?
* class inheritance


Built-in Libraries
------------------
* math
* os
* sys
* collections
* re (regular expressions)
* Decimals
* Fractions


Third-party Libraries
---------------------
* virtual environments
* The open-source community
* installing third-party packages - pip
* matplotlib
* numpy
* pandas
* flask
* requests
* plotly
* sympy
* selenium
* pygame


Applications
------------
* finding prime numbers
* file management
* adjusting phone and email formats with regular expressions
* find words in sentences with regular expressions
* demonstrate Zipf's law
* json data and NOAA API
* CodeWars
* web scraping
* speech recognition
* selenium
* A simple flask app

Other stuff
-----------
* Stack Overflow
* Real Python
* Talk Python to Me

Books
-----
* Automate the Boring Stuff
* Effective Python
* Flask Mega-Tutorial



Indices and tables
------------------

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
